name: Terraform PR to main closed

on:
    pull_request:
        branches:
            -   main
        paths:
            -   'iac/**'
        types:
            -   closed
    workflow_dispatch:

env:
    ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
    ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
    ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
    WORK_DIR: 'iac'

jobs:
    apply-plan:
        if: github.event.pull_request.merged == true
        runs-on: ubuntu-latest
        permissions:
            pull-requests: read
            contents: read
            actions: read
        steps:
            # Checkout the repo
            -   name: Checkout Repo
                uses: actions/checkout@v4
            -   name: Get workflow run id
                uses: actions/github-script@v7
                id: get_latest_run
                with:
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  script: |
                    const prNumber = context.payload.pull_request.number;
                    const workflowFileName = 'iac-pr.yaml';
                    let page = 1;
                    let workflow = null;
                    while (!workflow && page <= 10) {
                      const workflowsResponse = await github.rest.actions.listRepoWorkflows({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        per_page: 100,
                        page: page
                      });
                      workflow = workflowsResponse.data.workflows.find(wf => wf.path.endsWith(workflowFileName));
                      page++;
                    }
                    if (!workflow) {
                      throw new Error(`Workflow file not found: ${workflowFileName}`);
                    }
                    const workflowRunsResponse = await github.rest.actions.listWorkflowRuns({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      workflow_id: workflow.id,
                      branch: context.payload.pull_request.head.ref,
                      per_page: 10,
                    });
                    const prWorkflowRun = workflowRunsResponse.data.workflow_runs.find(run => run.head_sha === context.payload.pull_request.head.sha);
                    if (!prWorkflowRun) {
                      throw new Error(`No workflow run found for PR #${prNumber} with the file: ${workflowFileName}`);
                    }
                    console.log(`Latest Workflow Run ID for PR #${prNumber}: ${prWorkflowRun.id}`);
                    return prWorkflowRun.id;
            -   name: Get plan artifact
                uses: actions/download-artifact@v4
                with:
                    name: plan.tfplan
                    github-token: ${{ secrets.GITHUB_TOKEN }}
                    repository: ${{ github.repository }}
                    run-id: ${{ steps.get_latest_run.outputs.result }}
                    path: ${{ env.WORK_DIR }}/
            # Setup Terraform and install it
            -   name: Setup Terraform
                uses: hashicorp/setup-terraform@v3
                with:
                    terraform_version: 1.9.4
            # Run the terraform init command
            -   name: Terraform Init
                working-directory: ${{ env.WORK_DIR }}
                run: terraform init -backend-config="backend.conf" -reconfigure
            # Apply the Terraform changes
            -   name: Terraform Apply
                working-directory: ${{ env.WORK_DIR }}
                run: |
                    terraform apply "plan.tfplan"